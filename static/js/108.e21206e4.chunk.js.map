{"version":3,"file":"static/js/108.e21206e4.chunk.js","mappings":"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","sources":["webpack://sultan/./src/features/Back/back.module.css?4259","features/Back/Back.tsx","webpack://sultan/./src/features/MyMultySelect/myselect.module.css?9ffe","features/MyMultySelect/MyMultySelect.tsx","webpack://sultan/./src/features/MySelect/myselect.module.css?31c8","features/MySelect/MySelect.tsx","webpack://sultan/./src/features/AdminForm/adminform.module.css?c048","features/AdminForm/AdminForm.tsx","pages/AdminCabinet/AdminCabinet.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"root\":\"back_root__+haMt\",\"text\":\"back_text__ARxyj\"};","import React from 'react';\nimport { Btn } from 'shared/Btn';\nimport { SvgIcon } from 'shared/SvgIcon';\nimport styles from './back.module.css';\n\nexport function Back() {\n  const handleBack = function () {\n    window.history.back();\n  };\n  return (\n    <div className={styles.root}>\n      <Btn\n        icon={<SvgIcon type='arrowLeft' color='var(--color-2)' />}\n        f={handleBack}\n        color='var(--color-6)'\n      />\n      <span className={styles.text}>НАЗАД</span>\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"select\":\"myselect_select__U7ikZ\",\"form\":\"myselect_form__jn1O5\",\"inp\":\"myselect_inp__uLtE8\",\"arrow\":\"myselect_arrow__niQpg\",\"arrowIsOpen\":\"myselect_arrowIsOpen__uI8A1\",\"reset\":\"myselect_reset__NhJ-V\",\"list\":\"myselect_list__FBBAp\",\"item\":\"myselect_item__Flleg\"};","import { nanoid } from '@reduxjs/toolkit';\nimport { useAppDispatch, useAppSelector } from 'app/store/hooks';\nimport {\n  resetMultySelect,\n  setMultySelectValue,\n} from 'app/store/multySelectStore';\nimport React, { useEffect, useState } from 'react';\nimport { SvgIcon } from 'shared/SvgIcon';\nimport styles from './myselect.module.css';\n\nconst typeOfCare = [\n  'уход за телом',\n  'уход за руками',\n  'уход за ногами',\n  'уход за лицом',\n  'уход за волосами',\n  'средства для загара',\n  'средства для бритья',\n  'подарочные наборы',\n  'гигиеническая продукция',\n  'гигиена полости рта',\n  'бумажная продукция',\n];\n\ninterface IProps {\n  disabled?: boolean;\n}\n\nexport function MyMultySelect({ disabled = true }: IProps) {\n  const [isOpen, setIsOpen] = useState(false);\n  const [list, setList] = useState(typeOfCare);\n\n  const multySelectStore = useAppSelector((state) => state.multySelectValue);\n  const dispatch = useAppDispatch();\n\n  const setInputValue = function (el: string) {\n    dispatch(setMultySelectValue(el));\n    setList(() => {\n      return list.filter((e) => e !== el);\n    });\n  };\n\n  useEffect(() => {\n    multySelectStore.value === '' && setList(typeOfCare);\n  }, [multySelectStore]);\n  return (\n    <div className={styles.select}>\n      <div className={styles.form}>\n        <input\n          type='text'\n          className={styles.inp}\n          onClick={() => setIsOpen(!isOpen)}\n          value={multySelectStore.value}\n          readOnly\n          disabled={disabled}\n        />\n        <div\n          className={`${styles.arrow} ${\n            isOpen && list.length !== 0 && styles.arrowIsOpen\n          }`}\n        >\n          <SvgIcon type='arrovBottom' />\n        </div>\n        <button\n          className={styles.reset}\n          onClick={(e) => {\n            e.preventDefault();\n            setList(typeOfCare);\n            dispatch(resetMultySelect());\n          }}\n        >\n          сбросить типы\n        </button>\n      </div>\n      {isOpen && list.length !== 0 && (\n        <ul className={styles.list}>\n          {list.map((el) => {\n            return (\n              <li\n                className={styles.item}\n                onClick={(e) => {\n                  e.preventDefault();\n                  setInputValue(el);\n                  setIsOpen(false);\n                }}\n                key={nanoid()}\n              >\n                {el}\n              </li>\n            );\n          })}\n        </ul>\n      )}\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"select\":\"myselect_select__y2Uze\",\"form\":\"myselect_form__lHS-6\",\"inp\":\"myselect_inp__drg0j\",\"arrow\":\"myselect_arrow__YSkA5\",\"arrowIsOpen\":\"myselect_arrowIsOpen__fDuGJ\",\"list\":\"myselect_list__QgrRu\",\"item\":\"myselect_item__q7qze\"};","import { nanoid } from '@reduxjs/toolkit';\nimport { useAppDispatch, useAppSelector } from 'app/store/hooks';\nimport { setMySelectValue } from 'app/store/mySelectStore';\nimport React, { useState } from 'react';\nimport { SvgIcon } from 'shared/SvgIcon';\nimport styles from './myselect.module.css';\n\nconst typeOfCare = ['вес', 'объём'];\n\ninterface IProps {\n  f?: () => void;\n}\n\nexport function MySelect({ f }: IProps) {\n  const [isOpen, setIsOpen] = useState(false);\n  const [list, setList] = useState(\n    typeOfCare.filter((e) => e !== typeOfCare[1])\n  );\n  const mySelectStore = useAppSelector((state) => state.mySelectValue);\n  const dispatch = useAppDispatch();\n\n  const setInputValue = function (el: string) {\n    dispatch(setMySelectValue(el));\n    setList(() => {\n      return typeOfCare.filter((e) => e !== el);\n    });\n  };\n\n  return (\n    <div className={styles.select}>\n      <div className={styles.form}>\n        <input\n          type='text'\n          className={styles.inp}\n          onClick={() => setIsOpen(!isOpen)}\n          value={mySelectStore.value}\n          readOnly\n        />\n        <div className={`${styles.arrow} ${isOpen && styles.arrowIsOpen}`}>\n          <SvgIcon type='arrovBottom' />\n        </div>\n      </div>\n      {isOpen && (\n        <ul className={styles.list}>\n          {list.map((el) => {\n            return (\n              <li\n                className={styles.item}\n                onClick={(e) => {\n                  e.preventDefault();\n                  setInputValue(el);\n                  setIsOpen(false);\n                }}\n                key={nanoid()}\n              >\n                {el}\n              </li>\n            );\n          })}\n        </ul>\n      )}\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"adminform_form__ZJHF5\",\"title\":\"adminform_title__H6rc-\",\"label\":\"adminform_label__rAsIc\",\"inp\":\"adminform_inp__EiblL\",\"inpNull\":\"adminform_inpNull__HbvbU\",\"chbox\":\"adminform_chbox__rbeyG\",\"blockBtn\":\"adminform_blockBtn__xBypB\",\"barcodList\":\"adminform_barcodList__oQN-S\",\"barcodItem\":\"adminform_barcodItem__xpUA3\"};","import { nanoid } from '@reduxjs/toolkit';\nimport {\n  localStorageAdded,\n  localStorageRedacted,\n} from 'app/store/catalogProductsStore';\nimport { useAppDispatch, useAppSelector } from 'app/store/hooks';\nimport { resetMultySelect } from 'app/store/multySelectStore';\nimport { IProduct } from 'app/types/product';\nimport { Back } from 'features/Back';\nimport { MyMultySelect } from 'features/MyMultySelect';\nimport { MySelect } from 'features/MySelect';\nimport React, { useMemo, useState } from 'react';\nimport { Btn } from 'shared/Btn';\nimport styles from './adminform.module.css';\n\nexport function AdminForm() {\n  const [disabled, setDisabled] = useState(true);\n  const [barcodListOpen, setBarcodListOpen] = useState(false);\n  const [barcodList, setBarcodList] = useState([]);\n\n  const [url, setUrl] = useState('');\n  const [name, setName] = useState('');\n  const [size, setSize] = useState('');\n  const [barcode, setBarcode] = useState('');\n  const [manufacturer, setManufacturer] = useState('');\n  const [brand, setBrand] = useState('');\n  const [description, setDescription] = useState('');\n  const [price, setPrice] = useState('');\n\n  const multySelectStore = useAppSelector((state) => state.multySelectValue);\n  const dispatch = useAppDispatch();\n\n  const added = function () {\n    let obj: IProduct = {\n      id: nanoid(),\n      url,\n      name: name.trim(),\n      sizeType: document.forms[1].elements[2].getAttribute('value'),\n      size: size.trim(),\n      barcode: barcode === '' ? String(Date.now()) : barcode,\n      manufacturer: manufacturer.trim(),\n      brand: brand.trim(),\n      description: description.trim(),\n      price: +price.trim(),\n      typeOfCare: multySelectStore.value.split(','),\n      cosmeticType: !disabled,\n    };\n\n    dispatch(localStorageAdded(obj));\n    dispatch(resetMultySelect());\n    setUrl('');\n    setName('');\n    setSize('');\n    setBarcode('');\n    setManufacturer('');\n    setBrand('');\n    setDescription('');\n    setPrice('');\n    setDisabled(true);\n  };\n\n  const searhBarCod = function () {\n    let oldData = localStorage.getItem('catalogProduct');\n    if (!oldData) return;\n    const arr = JSON.parse(oldData)\n      .map((e: IProduct) => {\n        return e.barcode.indexOf(barcode) > -1 ? e.barcode : null;\n      })\n      .filter((e: string) => e !== null);\n    setBarcodList(arr);\n  };\n\n  const searchProduct = function (cod: string) {\n    let oldData = localStorage.getItem('catalogProduct');\n    if (!oldData) return;\n    const arr = JSON.parse(oldData);\n    const prod = arr.find((el: IProduct) => el.barcode === cod);\n    return { prod, arr };\n  };\n\n  const enterBarCod = function (cod: string) {\n    const prod = searchProduct(cod)?.prod;\n    if (prod === undefined) return;\n    setUrl(prod.url);\n    setName(prod.name);\n    setSize(prod.size);\n    setBarcode(prod.barcode);\n    setManufacturer(prod.manufacturer);\n    setBrand(prod.brand);\n    setDescription(prod.description);\n    setPrice(String(prod.price));\n  };\n\n  const redactedProduct = function () {\n    const prod: IProduct = searchProduct(barcode)?.prod;\n    const arr = searchProduct(barcode)?.arr;\n    if (prod === undefined) return;\n    let newArr: IProduct[] = [];\n    newArr = arr.map((el: IProduct) => {\n      return el.barcode !== prod.barcode\n        ? el\n        : {\n            ...el,\n            url,\n            name: name.trim(),\n            sizeType: document.forms[1].elements[2].getAttribute('value'),\n            size: size.trim(),\n            barcode: barcode === '' ? String(Date.now()) : barcode,\n            manufacturer: manufacturer.trim(),\n            brand: brand.trim(),\n            description: description.trim(),\n            price: +price.trim(),\n            typeOfCare: multySelectStore.value.split(','),\n            cosmeticType: !disabled,\n          };\n    });\n    dispatch(localStorageRedacted(newArr));\n    dispatch(resetMultySelect());\n    setUrl('');\n    setName('');\n    setSize('');\n    setBarcode('');\n    setManufacturer('');\n    setBrand('');\n    setDescription('');\n    setPrice('');\n    setDisabled(true);\n  };\n\n  const deletProduct = function () {\n    const prod = searchProduct(barcode)?.prod;\n    const arr = searchProduct(barcode)?.arr;\n    if (prod === undefined) return;\n    let newArr: IProduct[] = arr.filter(\n      (el: IProduct) => el.barcode !== prod.barcode\n    );\n    dispatch(localStorageRedacted(newArr));\n    dispatch(resetMultySelect());\n    setUrl('');\n    setName('');\n    setSize('');\n    setBarcode('');\n    setManufacturer('');\n    setBrand('');\n    setDescription('');\n    setPrice('');\n    setDisabled(true);\n  };\n\n  const nullValidate = useMemo(() => {\n    return url === '' ||\n      name === '' ||\n      size === '' ||\n      manufacturer === '' ||\n      brand === '' ||\n      description === '' ||\n      price === ''\n      ? false\n      : true;\n  }, [brand, description, manufacturer, name, price, size, url]);\n\n  return (\n    <div className={`${styles.wrapper} container`}>\n      <Back />\n      <form className={styles.form}>\n        <h2 className={styles.title}>\n          Добавить, редактировать, удалить товар (поля подсвеченные крассным -\n          обязательны к заполнению!)\n        </h2>\n        <label className={styles.label}>\n          Название:\n          <input\n            type='text'\n            className={`${styles.inp} ${name === '' && styles.inpNull}`}\n            value={name}\n            onChange={(e) => {\n              setName(e.target.value);\n            }}\n          />\n        </label>\n        <label className={styles.label}>\n          Url картинки:\n          <input\n            type='text'\n            className={`${styles.inp} ${url === '' && styles.inpNull}`}\n            value={url}\n            onChange={(e) => setUrl(e.target.value)}\n          />\n        </label>\n        <label className={styles.label}>\n          тип размера (вес/объем):\n          <MySelect />\n        </label>\n        <label className={styles.label}>\n          размер:\n          <input\n            type='text'\n            className={`${styles.inp} ${size === '' && styles.inpNull}`}\n            value={size}\n            onChange={(e) => setSize(e.target.value)}\n          />\n        </label>\n        <label className={styles.label}>\n          штрихкод (EAN-13):\n          <input\n            type='text'\n            className={styles.inp}\n            value={barcode}\n            onKeyUpCapture={searhBarCod}\n            onChange={(e) => {\n              setBarcode(e.target.value);\n              setBarcodListOpen(true);\n            }}\n          />\n          {barcodListOpen && barcodList.length > 0 && (\n            <ul className={styles.barcodList}>\n              {barcodList.map((el) => {\n                return (\n                  <li\n                    className={styles.barcodItem}\n                    key={el}\n                    onClick={() => {\n                      enterBarCod(el);\n                      setBarcodListOpen(false);\n                    }}\n                  >\n                    {el}\n                  </li>\n                );\n              })}\n            </ul>\n          )}\n        </label>\n        <label className={styles.label}>\n          производитель:\n          <input\n            type='text'\n            className={`${styles.inp} ${manufacturer === '' && styles.inpNull}`}\n            value={manufacturer}\n            onChange={(e) => setManufacturer(e.target.value)}\n          />\n        </label>\n        <label className={styles.label}>\n          Бренд:\n          <input\n            type='text'\n            className={`${styles.inp} ${brand === '' && styles.inpNull}`}\n            value={brand}\n            onChange={(e) => setBrand(e.target.value)}\n          />\n        </label>\n        <label className={styles.label}>\n          описание:\n          <input\n            type='text'\n            className={`${styles.inp} ${description === '' && styles.inpNull}`}\n            value={description}\n            onChange={(e) => setDescription(e.target.value)}\n          />\n        </label>\n        <label className={styles.label}>\n          цена:\n          <input\n            type='text'\n            className={`${styles.inp} ${price === '' && styles.inpNull}`}\n            value={price}\n            onChange={(e) => setPrice(e.target.value)}\n          />\n        </label>\n        <label className={styles.label}>\n          это средство для ухода?\n          <input\n            type='checkbox'\n            className={styles.chbox}\n            checked={!disabled}\n            onChange={(e) => {\n              e.target.checked ? setDisabled(false) : setDisabled(true);\n            }}\n          />\n        </label>\n        <label className={styles.label}>\n          тип ухода:\n          <MyMultySelect disabled={disabled} />\n        </label>\n      </form>\n      <div className={styles.blockBtn}>\n        <Btn text='Добавить' f={added} sitze='small' disabled={!nullValidate} />\n        <Btn\n          text='Изменить'\n          sitze='small'\n          f={redactedProduct}\n          disabled={!nullValidate}\n        />\n        <Btn\n          text='Удалить'\n          sitze='small'\n          f={deletProduct}\n          disabled={!nullValidate}\n        />\n      </div>\n    </div>\n  );\n}\n","import { AdminForm } from 'features/AdminForm';\nimport React from 'react';\n\nexport function AdminCabinet() {\n  return <AdminForm />;\n}\n"],"names":["Back","className","styles","Btn","icon","SvgIcon","type","color","f","window","history","back","typeOfCare","MyMultySelect","disabled","useState","isOpen","setIsOpen","list","setList","multySelectStore","useAppSelector","state","multySelectValue","dispatch","useAppDispatch","useEffect","value","onClick","readOnly","length","e","preventDefault","resetMultySelect","map","el","setMultySelectValue","filter","setInputValue","nanoid","MySelect","mySelectStore","mySelectValue","setMySelectValue","AdminForm","setDisabled","barcodListOpen","setBarcodListOpen","barcodList","setBarcodList","url","setUrl","name","setName","size","setSize","barcode","setBarcode","manufacturer","setManufacturer","brand","setBrand","description","setDescription","price","setPrice","searchProduct","cod","oldData","localStorage","getItem","arr","JSON","parse","prod","find","nullValidate","useMemo","onChange","target","onKeyUpCapture","indexOf","undefined","String","enterBarCod","checked","text","obj","id","trim","sizeType","document","forms","elements","getAttribute","Date","now","split","cosmeticType","localStorageAdded","sitze","newArr","localStorageRedacted","AdminCabinet"],"sourceRoot":""}